{"version":3,"file":"static/js/204.98a54d19.chunk.js","mappings":"8LA+CA,UA5Ca,SAAHA,GAAmB,IAAdC,EAAOD,EAAPC,QACfC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,IAClBI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAG,sCAAAC,OAAyCT,EAAO,2BAQzDU,MAAMF,EAPU,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,4PAIfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIZ,GAAOa,EAAAA,EAAAA,GAAKD,EAAKE,MAAM,IACtCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GAEpC,GAAG,CAACtB,IAGJ,IAI0ByB,EAJpBC,EAASrB,EAAKsB,QAClB,SAAAC,GAAM,MAAoC,WAAhCA,EAAOC,oBAAiC,IAE9CC,EAAa,GAAGC,GAAAC,EAAAA,EAAAA,GACFN,GAAM,IAA1B,IAAAK,EAAAE,MAAAR,EAAAM,EAAAG,KAAAC,MAA4B,CAAC,IAAlBC,EAAKX,EAAAY,MACdP,EAAWQ,KAAKF,EAAMG,KACxB,CAAC,OAAAC,GAAAT,EAAAU,EAAAD,EAAA,SAAAT,EAAAW,GAAA,CAKD,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACcC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAChBC,EAAAA,EAAAA,KAAA,MAAAD,SACGd,EAAWgB,KAAI,SAAAV,GAAK,OACnBS,EAAAA,EAAAA,KAAA,MAAAD,SAAiBR,GAARA,EAAmB,QAKtC,C","sources":["components/home-work-5/MovieStore/pages/Cast.jsx"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\n\nconst Cast = ({movieId}) => {\nconst [info, setInfo] = useState([])\n  useEffect(() => { \n\n    const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NjgyOWZhMWY2NzdmMjkwZmQ3NTAyNWFmOGI0N2UyMSIsIm5iZiI6MTcxOTY3MjIzNC4zMDIsInN1YiI6IjY2ODAxZGFhMjhkMzA2OTI2NzViZTZiNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V6-Px6XK3mzZbcoyTrOmxgROWXW8xsyr0QzjUgkkxQk\"\n      }\n    }\n    fetch(URL, options)\n      .then(response => response.json())\n      .then(data => setInfo([...data.cast]))\n    .catch(error => console.log(error))\n\n  }, [movieId])\n  \n\n  const acting = info.filter(\n    movies => movies.known_for_department === 'Acting'\n  );\n  const actorsName = [];\n  for (const actor of acting) {\n    actorsName.push(actor.name);\n  }\n\n\n  \n\n  return (\n    <div>\n                  <br />\n                  <h3>Actors name:</h3>\n      <ul>\n        {actorsName.map(actor => (\n          <li key={actor}>{actor}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","info","setInfo","useEffect","URL","concat","fetch","method","headers","accept","Authorization","then","response","json","data","_toConsumableArray","cast","catch","error","console","log","_step","acting","filter","movies","known_for_department","actorsName","_iterator","_createForOfIteratorHelper","s","n","done","actor","value","push","name","err","e","f","_jsxs","children","_jsx","map"],"sourceRoot":""}