{"version":3,"file":"static/js/555.82e4c6b9.chunk.js","mappings":"4LAIA,MAqDA,EArDeA,KACP,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAQH,EAAaI,IAAI,UAAY,IAEjDC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAG,mDAAAC,OAAsDJ,EAAK,8CASpEK,MAAMF,EARU,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,4PAIHC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQlB,EAAW,IAAIkB,EAAKC,WACjCC,MAAMC,GAASC,QAAQC,IAAIF,KAC7B,CAAChB,IAMJ,OACEmB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAPUC,IAClBA,EAAEC,iBACFzB,EAAgB,CAACE,MAAMsB,EAAEE,cAAcC,SAASC,WAAWC,QAC3DL,EAAEE,cAAcI,SAIcR,SAAA,EAC1BS,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,KAAK,aACLC,MAAO,CACLC,SAAU,OACVC,YAAa,GACbC,WAAY,EACZC,cAAe,MAGnBP,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASE,MAAO,CAAEC,SAAU,QAASb,SAAC,qBAIrDS,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAT,UACES,EAAAA,EAAAA,KAAA,MAAIG,MAAO,CAAEE,YAAa,IAAKd,SAC9B1B,EAAQ2C,IAAIC,IAAU,MAAMC,EAAI,WAAAnC,OAAckC,EAAME,IAC9B,OAAQX,EAAAA,EAAAA,KAAA,MAAAT,UAAeS,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAIH,EAAKnB,SAAEkB,EAAMK,SAA7BJ,Y","sources":["components/home-work-5/MovieStore/pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\n\nconst Movies = () => {\n        const [infoArr, setInfoArr] = useState([]);\n        const [searchParams, setSearchParams] = useSearchParams();\n        const query = searchParams.get(\"query\") || \"\"\n\n  useEffect(() => {\n    const URL = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NjgyOWZhMWY2NzdmMjkwZmQ3NTAyNWFmOGI0N2UyMSIsIm5iZiI6MTcxOTY3MjIzNC4zMDIsInN1YiI6IjY2ODAxZGFhMjhkMzA2OTI2NzViZTZiNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V6-Px6XK3mzZbcoyTrOmxgROWXW8xsyr0QzjUgkkxQk',\n      },\n    };\n    fetch(URL, options)\n      .then(response => response.json())\n      .then(data => setInfoArr([...data.results]))\n      .catch(error => console.log(error));\n  }, [query]);\n  const handleQuery = e => {\n    e.preventDefault();\n    setSearchParams({query:e.currentTarget.elements.movieInput.value});\n    e.currentTarget.reset();\n  };\n  return (\n    <div>\n      <form onSubmit={handleQuery}>\n        <input\n          type=\"text\"\n          name=\"movieInput\"\n          style={{\n            fontSize: '24px',\n            paddingLeft: 15,\n            paddingTop: 5,\n            paddingBottom: 5,\n          }}\n        />\n        <button type=\"submit\" style={{ fontSize: '25px' }}>\n          ♥️\n        </button>\n      </form>\n      <br />\n      <div>\n        <ul style={{ paddingLeft: 20 }}>\n        {infoArr.map(movie => {const site = `/movies/${movie.id}`;                         \n                               return (<li key={site}><Link to={site}>{movie.title}</Link></li>)})}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n\n"],"names":["Movies","infoArr","setInfoArr","useState","searchParams","setSearchParams","useSearchParams","query","get","useEffect","URL","concat","fetch","method","headers","accept","Authorization","then","response","json","data","results","catch","error","console","log","_jsxs","children","onSubmit","e","preventDefault","currentTarget","elements","movieInput","value","reset","_jsx","type","name","style","fontSize","paddingLeft","paddingTop","paddingBottom","map","movie","site","id","Link","to","title"],"sourceRoot":""}